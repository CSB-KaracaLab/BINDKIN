! print_xrdc.inp
!    Analyze and print RDC restraints (para code) statistics
!
! ***********************************************************************
! * Copyright 2003-2015 Alexandre Bonvin, Utrecht University.           *
! * All rights reserved.                                                *
! * This code is part of the HADDOCK software and governed by its       *
! * license. Please see the LICENSE file that should have been included *
! * as part of this package.                                            *
! ***********************************************************************
!

@RUN:protocols/initialize.cns(iteration=$iteration;)

@NEWIT:iteration.cns(iteration=$iteration;)

@RUN:run.cns(
iteration =$iteration;
filenames =$filenames;
data      =$data;
iterations=$iterations;
saprotocol=$saprotocol;
refine    =$refine;
toppar    =$toppar;
analysis  =$analysis;
)

!reads in structure, coordinates and parameter files
@RUN:protocols/read_struc.cns

!set the energy flags:
@@RUN:protocols/flags_new.cns(Iteration=$Iteration; Data=$Data; )

set display=NEWIT:analysis/xrdc.disp end

flags exclude * include xrdc end


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!residual dipolar couplings:
xrdc nres=200 end
set echo off message on end
if ($data.rdc1_choice eq "XRDC") then
  xrdc
    class rdc1
    force 1.0
    coeff $Data.rdc1_d $Data.rdc1_r
    @@RUN:data/rdcs/rdc1.tbl
 end
end if
if ($data.rdc2_choice eq "XRDC") then
  xrdc
    class rdc2
    force 1.0
    coeff $Data.rdc2_d $Data.rdc2_r
    @@RUN:data/rdcs/rdc2.tbl
  end
end if
if ($data.rdc3_choice eq "XRDC") then
  xrdc
    class rdc3
    force 1.0
    coeff $Data.rdc3_d $Data.rdc3_r
    @@RUN:data/rdcs/rdc3.tbl
  end
end if
if ($data.rdc4_choice eq "XRDC") then
  xrdc
    class rdc4
    force 1.0
    coeff $Data.rdc4_d $Data.rdc4_r
    @@RUN:data/rdcs/rdc4.tbl
  end
end if
if ($data.rdc5_choice eq "XRDC") then
  xrdc
    class rdc5
    force 1.0
    coeff $Data.rdc5_d $Data.rdc5_r
    @@RUN:data/rdcs/rdc5.tbl
  end
end if
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

evaluate ($sum_rms_rdc1 = 0)
evaluate ($sumsq_rms_rdc1 = 0)
evaluate ($sum_rms_rdc2 = 0)
evaluate ($sumsq_rms_rdc2 = 0)
evaluate ($sum_rms_rdc3 = 0)
evaluate ($sumsq_rms_rdc3 = 0)
evaluate ($sum_rms_rdc4 = 0)
evaluate ($sumsq_rms_rdc4 = 0)
evaluate ($sum_rms_rdc5 = 0)
evaluate ($sumsq_rms_rdc5 = 0)

@PREVIT:file.cns(filenames=$filenames)

evaluate ($count = 0)
evaluate ($TotalNstruct = 0)
while ($count lt $Iterations.Structures) loop main
   evaluate ($count=$count+1)
   evaluate ($file = $filenames.bestfile_$count)
   if ($file ne "") then
      evaluate ($TotalNstruct = $TotalNstruct + 1)
   end if
end loop main

if ($Iterations.anastruc > $TotalNstruct) then
  evaluate ($Iterations.anastruc = $ToTalNstruct)
end if

display #filename rms_xrdc #viol>1Hz #viol>0.5Hz #viol>0.2Hz

evaluate ($count = 0)
evaluate ($nstruc1 = 0)
while ($count le $Iterations.anastruc) loop main
   evaluate ($count = $count + 1)
   evaluate ($file = $filenames.bestfile_$count)
   coor init end
   if ($file ne "") then
     coor @@$file
     evaluate ($nstruc1 = $nstruc1 + 1)

     if ($Data.rdc1_choice eq "XRDC") then
       xrdc print thresh=1.0 class rdc1 end
       evaluate ($violations1 = $violations)
       xrdc print thresh=0.5 class rdc1 end
       evaluate ($violations2 = $violations)
       xrdc print thresh=0.2 class rdc1 end
       evaluate ($violations3 = $violations)
       evaluate ($rms_rdc1 = $result)
       evaluate ($sum_rms_rdc1 = $sum_rms_rdc1 + $rms_rdc1)
       evaluate ($sumsq_rms_rdc1 = $sumsq_rms_rdc1 + $rms_rdc1**2)
       display # rdc1: $file $rms_rdc1 $violations1 $violations2 $violations3
     end if
     if ($Data.rdc2_choice eq "XRDC") then
       xrdc print thresh=1.0 class rdc2 end
       evaluate ($violations1 = $violations)
       xrdc print thresh=0.5 class rdc2 end
       evaluate ($violations2 = $violations)
       xrdc print thresh=0.2 class rdc2 end
       evaluate ($violations3 = $violations)
       evaluate ($rms_rdc2 = $result)
       evaluate ($sum_rms_rdc2 = $sum_rms_rdc2 + $rms_rdc2)
       evaluate ($sumsq_rms_rdc2 = $sumsq_rms_rdc2 + $rms_rdc2**2)
       display # rdc2: $file $rms_rdc2 $violations1 $violations2 $violations3
     end if    
     if ($Data.rdc3_choice eq "XRDC") then
       xrdc print thresh=1.0 class rdc3 end
       evaluate ($violations1 = $violations)
       xrdc print thresh=0.5 class rdc3 end
       evaluate ($violations2 = $violations)
       xrdc print thresh=0.2 class rdc3 end
       evaluate ($violations3 = $violations)
       evaluate ($rms_rdc3 = $result)
       evaluate ($sum_rms_rdc3 = $sum_rms_rdc3 + $rms_rdc3)
       evaluate ($sumsq_rms_rdc3 = $sumsq_rms_rdc3 + $rms_rdc3**2)
       display # rdc3: $file $rms_rdc3 $violations1 $violations2 $violations3
     end if    
     if ($Data.rdc4_choice eq "XRDC") then
       xrdc print thresh=1.0 class rdc4 end
       evaluate ($violations1 = $violations)
       xrdc print thresh=0.5 class rdc4 end
       evaluate ($violations2 = $violations)
       xrdc print thresh=0.2 class rdc4 end
       evaluate ($violations3 = $violations)
       evaluate ($rms_rdc4 = $result)
       evaluate ($sum_rms_rdc4 = $sum_rms_rdc4 + $rms_rdc4)
       evaluate ($sumsq_rms_rdc4 = $sumsq_rms_rdc4 + $rms_rdc4**2)
       display # rdc4: $file $rms_rdc4 $violations1 $violations2 $violations3
     end if    
     if ($Data.rdc5_choice eq "XRDC") then
       xrdc print thresh=1.0 class rdc5 end
       evaluate ($violations1 = $violations)
       xrdc print thresh=0.5 class rdc5 end
       evaluate ($violations2 = $violations)
       xrdc print thresh=0.2 class rdc5 end
       evaluate ($violations3 = $violations)
       evaluate ($rms_rdc5 = $result)
       evaluate ($sum_rms_rdc5 = $sum_rms_rdc5 + $rms_rdc5)
       evaluate ($sumsq_rms_rdc5 = $sumsq_rms_rdc5 + $rms_rdc5**2)
       display # rdc5: $file $rms_rdc5 $violations1 $violations2 $violations3
     end if

   end if
end loop main


if ($Data.rdc1_choice eq "XRDC") then
  evaluate ($mean_rms_rdc1 = $sum_rms_rdc1 / $nstruc1)
  evaluate ($stdev_rms_rdc1 = sqrt(($sumsq_rms_rdc1 - $nstruc1*$mean_rms_rdc1**2)/ $nstruc1))
  display # mean values RDC(xrdc) class rdc1
  display # xrdc $mean_rms_rdc1 (+/- $stdev_rms_rdc1 )
end if
if ($Data.rdc2_choice eq "XRDC") then
  evaluate ($mean_rms_rdc2 = $sum_rms_rdc2 / $nstruc1)
  evaluate ($stdev_rms_rdc2 = sqrt(($sumsq_rms_rdc2 - $nstruc1*$mean_rms_rdc2**2)/ $nstruc1))
  display # mean values RDC(xrdc) class rdc2
  display # xrdc $mean_rms_rdc2 (+/- $stdev_rms_rdc2 )
end if    
if ($Data.rdc3_choice eq "XRDC") then
  evaluate ($mean_rms_rdc3 = $sum_rms_rdc3 / $nstruc1)
  evaluate ($stdev_rms_rdc3 = sqrt(($sumsq_rms_rdc3 - $nstruc1*$mean_rms_rdc3**2)/ $nstruc1))
  display # mean values RDC(xrdc) class rdc3
  display # xrdc $mean_rms_rdc3 (+/- $stdev_rms_rdc3 )
end if    
if ($Data.rdc4_choice eq "XRDC") then
  evaluate ($mean_rms_rdc4 = $sum_rms_rdc4 / $nstruc1)
  evaluate ($stdev_rms_rdc4 = sqrt(($sumsq_rms_rdc4 - $nstruc1*$mean_rms_rdc4**2)/ $nstruc1))
  display # mean values RDC(xrdc) class rdc4
  display # xrdc $mean_rms_rdc4 (+/- $stdev_rms_rdc4 )
end if    
if ($Data.rdc5_choice eq "XRDC") then
  evaluate ($mean_rms_rdc5 = $sum_rms_rdc5 / $nstruc1)
  evaluate ($stdev_rms_rdc5 = sqrt(($sumsq_rms_rdc5 - $nstruc1*$mean_rms_rdc5**2)/ $nstruc1))
  display # mean values RDC(xrdc) class rdc5
  display # xrdc $mean_rms_rdc5 (+/- $stdev_rms_rdc5 )
end if

stop
