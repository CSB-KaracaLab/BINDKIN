 ! rebuild-unknown.cns
!    Rebuild unknown atoms in the context of the complex
!
! ***********************************************************************
! * Copyright 2003-2017 Alexandre Bonvin, Utrecht University.           *
! * All rights reserved.                                                *
! * This code is part of the HADDOCK software and governed by its       *
! * license. Please see the LICENSE file that should have been included *
! * as part of this package.                                            *
! ***********************************************************************
!
set echo=on end

show sum(1) (store9)
evaluate ($tobuild=$result)
display REBUILDING $tobuild ATOMS

energy end

if ( $tobuild > 0 ) then

   fix selection=(not(store9)) end

   show sum(1) (store9)
   evaluate ($moving=$result)

   if ( $moving > 0 ) then
     for $id in id (tag and byres(store9)) loop avco

       show ave(x) (byres(id $id) and known)
       evaluate ($ave_x=$result)
       show ave(y) (byres(id $id) and known)
       evaluate ($ave_y=$result)
       show ave(z) (byres(id $id) and known)
       evaluate ($ave_z=$result)

       do (x=$ave_x) (byres(id $id) and store9)
       do (y=$ave_y) (byres(id $id) and store9)
       do (z=$ave_z) (byres(id $id) and store9)
 
     end loop avco 

     do (x=x+2*random(1.0)-1) (store9)
     do (y=y+2*random(1.0)-1) (store9)
     do (z=z+2*random(1.0)-1) (store9)

     {- start parameter for the side chain building -}
     parameter
       nbonds
         rcon=20. nbxmod=-2 repel=0.9  wmin=0.1 tolerance=1.
         rexp=2 irexp=2 inhibit=0.25
       end
     end

     {- Friction coefficient, in 1/ps. -}
     do (fbeta=100) (store9)

     evaluate ($bath=300.0)
     evaluate ($nstep=500)
     evaluate ($timestep=0.0005)

     do (refy=mass) (store9)

     do (mass=20) (store9)

     igroup interaction 
       (store9) (store9 or known)
     end

     {- turn on initial energy terms -}
     flags exclude * include bond angle vdw end
 
     minimize powell nstep=50  nprint=10 end

     do (vx=maxwell($bath)) (store9)
     do (vy=maxwell($bath)) (store9)
     do (vz=maxwell($bath)) (store9)

     flags exclude vdw include impr end

     dynamics cartesian
       nstep=50
       timestep=$timestep
       tcoupling=true temperature=$bath
       nprint=$nstep
       cmremove=false
     end

     flags include vdw end

     minimize powell nstep=50 nprint=10 end

     do (vx=maxwell($bath)) (store9)
     do (vy=maxwell($bath)) (store9)
     do (vz=maxwell($bath)) (store9)

     dynamics cartesian
       nstep=50
       timestep=$timestep
       tcoupling=true temperature=$bath
       nprint=$nstep
       cmremove=false
     end

     parameter
       nbonds
         rcon=2. nbxmod=-3 repel=0.75
       end
     end

     minimize powell nstep=100 nprint=25 end

     do (vx=maxwell($bath)) (store9)
     do (vy=maxwell($bath)) (store9)
     do (vz=maxwell($bath)) (store9)

     dynamics cartesian
       nstep=$nstep
       timestep=$timestep
       tcoupling=true temperature=$bath
       nprint=$nstep
       cmremove=false
     end

     {- turn on all energy terms -}
     flags include dihe ? end

     {- set repel to ~vdw radii -}
     parameter
       nbonds
         repel=0.89
       end
     end

     minimize powell nstep=500 nprint=50 end

     flags exclude * include bond angl impr dihe vdw elec end

     {- return masses to something sensible -}
     do (mass=refy) (store9)

     do (vx=maxwell($bath)) (store9)
     do (vy=maxwell($bath)) (store9)
     do (vz=maxwell($bath)) (store9)

     dynamics cartesian
       nstep=$nstep
       timestep=$timestep
       tcoupling=true temperature=$bath
       nprint=$nstep
       cmremove=false
     end

     {- some minimisation -}
     minimize powell
       nstep=500
       drop=40.0
       nprint=50
     end

     {- turn on electrostatic and proper non-bonded-}
     parameter
       nbonds
         repel=0
         nbxmod=5 atom cdie shift
         cutnb=9.5 ctofnb=8.5 ctonnb=6.5 eps=10.0 e14fac=0.4 inhibit 0.25
	 wmin=0.5
	 tolerance  0.5
       end
     end

     flags exclude * include bond angl impr dihe vdw elec end

     minimize powell
       nstep=500
       drop=40.0
       nprint=50
     end

     do (vx=maxwell($bath)) (store9)
     do (vy=maxwell($bath)) (store9)
     do (vz=maxwell($bath)) (store9)

     dynamics cartesian
       nstep=$nstep
       timestep=$timestep
       tcoupling=true temperature=$bath
       nprint=$nstep
       cmremove=false
     end

     {- some final minimisation -}
     minimize powell
       nstep=500
       drop=40.0
       nprint=50
     end

     print thres=0.02 bonds
     print thres=5. angles

   end if
  
   energy end

   @RUN:protocols/flex_segment_back.cns
   fix sele=((attr store5 = 0) and not name H*) end
   minimize powell
     nstep=50
     drop=40.0
     nprint=5
   end
   fix sele=(not all) end

   energy end

   print thres=0.02 bonds
   print thres=5. angles
   flag excl noe cdih end

   do (q=1.0) (store9
 end if

 fix selection=( none ) end
 energy end
 evaluate ($bonded = $bond + $angl + $impr)
 if ($bonded > 10000) then
    minimize powell nstep=100 drop=10.0 nprint=10 end
 end if
 if ($bonded > 10000) then
   energy end
   evaluate ($bonded = $bond + $angl + $impr)
   evaluate ($dispfile = $coor_outfile - ".pdb" + "_" + encode($nstruc) + ".warn")
   set display=$dispfile end
   display WARNING: the bonded energy is very high:
   display Ebonded-total=$bonded Ebond=$bond Eangl=$angl Eimpr=$impr
   display Something is possibly wrong with your input structure
   close $dispfile end
 end if

