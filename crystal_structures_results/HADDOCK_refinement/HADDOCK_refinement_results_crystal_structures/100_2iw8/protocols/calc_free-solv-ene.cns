! calc_free-solv-ene.cns
!    Calculate the total energy of the separated components in explicit
!    solvent
!
! ***********************************************************************
! * Copyright 2003-2015 Alexandre Bonvin, Utrecht University.           *
! * All rights reserved.                                                *
! * This code is part of the HADDOCK software and governed by its       *
! * license. Please see the LICENSE file that should have been included *
! * as part of this package.                                            *
! ***********************************************************************
!
!move molecules far apart
@RUN:protocols/separate.cns(Data=$Data; Toppar=$Toppar)

! generate water layer
do (segid = "PROT") (segid "    ")
@RUN:protocols/generate_water.cns
do (segid = "    ") (segid "PROT")

igroup
  interaction  (not (resn ANI or resn DAN or resn XAN))
               (not (resn ANI or resn DAN or resn XAN)) weight * 1 end
  interaction  (resn ANI or resn DAN or resn XAN)
               (resn ANI or resn DAN or resn XAN) weight * 1 vdw 0.0 elec 0.0 end
end

energy end

! since we do not use SHAKe, increase the water bond angle energy constant
parameter
  bond  (resn WAT ) (resn WAT ) 1000 TOKEN
  angle (resn WAT ) (resn WAT ) (resn WAT ) 500 TOKEN
  bond  (resn HOH ) (resn HOH ) 1000 TOKEN
  angle (resn HOH ) (resn HOH ) (resn HOH ) 500 TOKEN
  bond  (resn TIP*) (resn TIP*) 1000 TOKEN
  angle (resn TIP*) (resn TIP*) (resn TIP*) 500 TOKEN
end

ident (store1) (store1 or (resn WAT or resn HOH or resn TIP*))

! fix the protein for initial minimization
fix sele = (not (resn WAT or resn HOH or resn TIP*)) end
minimize powell nstep=40 drop=100 end

! release protein and restrain harmonically
fix sele = (not all) end
do (refx=x) (all)
do (refy=y) (all)
do (refz=z) (all)
restraints harmonic 
   exponent = 2
end
flag incl harm end
do (harm = 0)  (all)
do (harm = 5) (not name h* and not (resn WAT or resn HOH or resn TIP*))
do (harmonic=20.0)(resn ANI and name OO)
do (harmonic=0.0) (resn ANI and name Z )
do (harmonic=0.0) (resn ANI and name X )
do (harmonic=0.0) (resn ANI and name Y )
do (harmonic=20.0)(resn DAN and name OO)
do (harmonic=0.0) (resn DAN and name Z )
do (harmonic=0.0) (resn DAN and name X )
do (harmonic=0.0) (resn DAN and name Y )

igroup
  interaction (not (resn ANI or resn DAN or resn XAN)) (not (resn ANI or resn DAN or resn XAN))
  interaction (    resn ANI) (    resn ANI)
  interaction (    resn DAN) (    resn DAN)
  interaction (    resn XAN) (    resn XAN)
end

minimize powell nstep=40 drop=10 end

!define flexible segments:
@RUN:protocols/flex_segment_side.cns

do (mass =100) (all)
do (mass=1000) (resn ani)
do (mass=1000) (resn dan)
do (mass=1000) (resn xan)
do (fbeta = 0) (all)
do (fbeta = 20. {1/ps} ) ( all )                

! heat to 300 K
for $bath in (100 200 300) loop heat
   do (harm = 0)  (all)
   do (harm = 5)  (not name h* and not resn ANI and not resn XAN and not resn DAN and not (resn WAT or resn HOH or resn TIP*))
   eval ($nchain1 = 0)
   while ($nchain1 < $data.ncomponents) loop nloop1
    eval ($nchain1=$nchain1+1)
    do (harm = 0)  (attribute store5 = $nchain1 and not ( name CA or name C or name N or name P or 
                     (name N1 and (resn CYT or resn THY or resn URI or resn C or resn DC or resn T or resn DT or resn U)) or
		     (name N9 and (resn ADE or resn GUA or resn A or resn DA or resn G or resn DG)) ))
   end loop nloop1
   do (vx=maxwell($bath)) (all)
   do (vy=maxwell($bath)) (all)
   do (vz=maxwell($bath)) (all)  

   dynamics cartesian
      nstep=$refine.heatsteps timest=0.002{ps}       
      temperature=$bath  tcoupling = true
      nprint=25 
   end 
end loop heat

!define flexible segments:
@RUN:protocols/flex_segment_back.cns

do (harm = 0)  (all)
do (harm = 1)  (not name h* and not resn ANI and not resn XAN and not resn DAN and not (resn WAT or resn HOH or resn TIP*))
eval ($nchain1 = 0)
while ($nchain1 < $data.ncomponents) loop nloop1
 eval ($nchain1=$nchain1+1)
 do (harm = 0)  (attribute store5 = $nchain1) 
end loop nloop1
do (harm = 20) (resn ANI and name OO)
do (harm = 20) (resn DAN and name OO)

dynamics cartesian
   nstep=$refine.steps timest=0.002{ps}      
   temperature=$bath  tcoupling = true
   nprint=50 
end 

do (mass = 100) (all)
do (harm = 0)  (all)
do (harm = 1)  (name CA or name C or name N or name P or 
                (name N1 and (resn CYT or resn THY or resn URI or resn C or resn DC or resn T or resn DT or resn U)) or
	        (name N9 and (resn ADE or resn GUA or resn A or resn DA or resn G or resn DG)) )
do (harm = 20) (resn ANI and name OO)
do (harm = 20) (resn DAN and name OO)
while ($nchain1 < $data.ncomponents) loop nloop1
 eval ($nchain1=$nchain1+1)
 do (harm = 0)  (attribute store5 = $nchain1) 
end loop nloop1

! cool 
for $bath in (300 200 100) loop cool

   dynamics cartesian
      nstep=$refine.coolsteps timest=0.002{ps}      
      temperature=$bath  tcoupling = true                       
      nprint=50 
   end 
end loop cool

flag excl harm end

mini powell nstep 100 end

igroup
   interaction (not resn ANI and not resn DAN and not resn XAN and not (resn WAT or resn HOH or resn TIP*)) 
               (not resn ANI and not resn XAN and not resn DAN)
end

evaluate ($esolfree = 0.0)
energy end
evaluate ($esolfree = $vdw + $elec)
do (store7 = 0) (all)
do (store7 = 1) ((resn WAT or resn HOH or resn TIP*) and name oh2)
show sum (store7) (all)
evaluate ($nwfree = $result)
evaluate ($esolfree = $esolfree / $nwfree)
display FREE MOLECULES SOLVATION ENERGY PER WATER MOLECULE = $esolfree  (Nsolvent = $result)

igroup
   interaction (not resn ANI and not resn XAN and not resn DAN and not (resn WAT or resn HOH or resn TIP*)) 
               (not resn ANI and not resn XAN and not resn DAN and not (resn WAT or resn HOH or resn TIP*))
end

evaluate ($eintfree = 0.0)
energy end
evaluate ($eintfree = $bond + $angl + $impr + $dihe + $vdw + $elec)

display FREE MOLECULES INTERNAL ENERGY = $eintfree


