! cm-restraints.cns
!    Define center-of-mass restraints between molecules
!
! ***********************************************************************
! * Copyright 2003-2015 Alexandre Bonvin, Utrecht University.           *
! * All rights reserved.                                                *
! * This code is part of the HADDOCK software and governed by its       *
! * license. Please see the LICENSE file that should have been included *
! * as part of this package.                                            *
! ***********************************************************************
!
!define center of mass restraints between all molecules
!using distance restraints between CA or N1 atoms with center averaging
  set echo=on message=on end

  evaluate ($ncount = 0)
   
  while ($ncount < $data.ncomponents) loop nloop1
    evaluate ($dim_$ncount = 0.0)
    evaluate ($ncount = $ncount +1)
    show max (x) (segid $Toppar.prot_segid_$ncount and (name CA or name N1))
    evaluate ($xdim = $result)
    show max (y) (segid $Toppar.prot_segid_$ncount and (name CA or name N1))
    evaluate ($ydim = $result)
    show max (z) (segid $Toppar.prot_segid_$ncount and (name CA or name N1))
    evaluate ($zdim = $result)
    show min (x) (segid $Toppar.prot_segid_$ncount and (name CA or name N1))
    evaluate ($xdim = $xdim - $result)
    show min (y) (segid $Toppar.prot_segid_$ncount and (name CA or name N1))
    evaluate ($ydim = $ydim - $result)
    show min (z) (segid $Toppar.prot_segid_$ncount and (name CA or name N1))
    evaluate ($zdim = $zdim - $result)
    evaluate ($corr = max($xdim,$ydim))
    evaluate ($corr = max($corr,$zdim))
    do (store6 = 0) (all)
    do (store6 = 1) (segid $Toppar.prot_segid_$ncount and (name CA or name N1))
    show sum (store6) (all)
    if ($result eq 0) then
      evaluate ($corr = 0.0)
    end if
    evaluate ($dim_$ncount = ($xdim + $ydim + $zdim - $corr)/4.0)
    if ($toppar.dna_$ncount = true) then
      evaluate ($dim_$ncount = 0.0)
    end if
  end loop nloop1

  eval($nchain = 0)
  do (store9 = 0) (all)
  do (store9 = 1) (name CA or name N1)
  while ($nchain < $data.ncomponents) loop nloop0
    eval($nchain = $nchain + 1)
    show sum (store9) (segid $Toppar.prot_segid_$nchain)
    if ($result < 3) then
      evaluate ($selat$nchain = 0 )
    else
      evaluate ($selat$nchain = 1 )
    end if
  end loop nloop0
  
  eval($nchain1 = 0)
  noe
    class contact
    while ($nchain1 < $data.ncomponents) loop nloop1
      eval($nchain1 = $nchain1 + 1)
      eval($nchain2 = $nchain1 )
      while ($nchain2 < $data.ncomponents) loop nloop2
        eval($nchain2 = $nchain2 + 1)
        eval($cm_dist = $dim_$nchain1 + $dim_$nchain2)
        if ($selat$nchain1 = 1) then
          if ($selat$nchain2 = 1) then
            assign (segid $Toppar.prot_segid_$nchain1 and ( name CA or name N1 ))
	               (segid $Toppar.prot_segid_$nchain2 and ( name CA or name N1 )) $cm_dist $cm_dist 1.0
	      else
            assign (segid $Toppar.prot_segid_$nchain1 and ( name CA or name N1 ))
	               (segid $Toppar.prot_segid_$nchain2) $cm_dist $cm_dist 1.0
	      end if
	    else
          if ($selat$nchain2 = 1) then
            assign (segid $Toppar.prot_segid_$nchain1)
	               (segid $Toppar.prot_segid_$nchain2 and ( name CA or name N1 )) $cm_dist $cm_dist 1.0
	      else
            assign (segid $Toppar.prot_segid_$nchain1)
	               (segid $Toppar.prot_segid_$nchain2) $cm_dist $cm_dist 1.0
	      end if
	    end if
      end loop nloop2
    end loop nloop1

    averaging  contact center
    scale      contact $Data.kcont
    sqconstant contact 1.0
    sqexponent contact 2
    soexponent contact 1
    rswitch    contact 1.0
    sqoffset   contact 0.0
    asymptote  contact 2.0
    msoexponent contact 1
    masymptote  contact -0.1
    mrswitch    contact 1.0
  end
