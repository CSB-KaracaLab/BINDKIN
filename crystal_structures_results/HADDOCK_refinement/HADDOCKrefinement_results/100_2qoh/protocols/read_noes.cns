! read_noes.cns
!    Read distance restraints
!
! ***********************************************************************
! * Copyright 2003-2015 Alexandre Bonvin, Utrecht University.           *
! * Originally adapted from Aria 1.2 from Nilges and Linge, EMBL.       *
! * All rights reserved.                                                *
! * This code is part of the HADDOCK software and governed by its       *
! * license. Please see the LICENSE file that should have been included *
! * as part of this package.                                            *
! ***********************************************************************
!

module(Iteration; Data; count;)

!NOEs, hbonds
noe
  reset
  nrestraints = 4000000     ! allocate space for NOEs  
  ceiling 1000
end

display reading NEWIT:unambig.tbl in iteration &iteration with option &data.unamb_firstit


if (&data.amb_firstit le &iteration)   then 
     evaluate ($filenam0 = "NEWIT:ambig.tbl_" + encode($count)) 
     fileexist $filenam0 end
     if ($result eq false) then
       evaluate ($filenam0 = "NEWIT:ambig.tbl")
     end if
     noe class ambi @@$filenam0 end 
end if

if (&data.unamb_firstit le &iteration) then 
     noe class dist @@NEWIT:unambig.tbl end 
end if

if (&data.hbond_firstit le &iteration) then
   if (&data.hbonds_on eq true) then 
      noe @@RUN:data/hbonds/hbonds.tbl end
   end if
end if

noe
  averaging  * sum
  potential  * soft
  scale      * 1.0                           
  sqconstant * 1.0
  sqexponent * 2
  soexponent * 1
  rswitch    * 1.0
  sqoffset   * 0.0
  asymptote  * 2.0
  msoexponent * 1
  masymptote  * -0.1
  mrswitch    * 1.0
  avexpo hbond 20
end

if (&data.waterdock eq true) then
 if (&iteration eq 0) then
  if (&data.solvate_method eq "restraints") then
   evaluate ($nchain=0)
   while ($nchain < &data.ncomponents) loop nloop1
    evaluate ($nchain = $nchain + 1)
    evaluate ($watersegname_$nchain="WAT" + encode($nchain))
    noe class amwa end
    for $atom_id in id ((resn WAT or resn HOH or resn TIP*) and name OH2 and segid $watersegname_$nchain and not store5) loop waterrestraint
   noe
    assi (segid $toppar.prot_segid_$nchain and (resn arg or resn glu or resn lys or resn asp or resn tyr) and ((id $atom_id) around &data.water_restraint_cutoff))
        (id $atom_id) &data.water_restraint_cutoff &data.water_restraint_cutoff 0.0
   end
  end loop waterrestraint
   end loop nloop1
  end if
 end if
end if
