! calc_free-ene.cns
!    Calculate the total energy of the separated components
!
! ***********************************************************************
! * Copyright 2003-2015 Alexandre Bonvin, Utrecht University.           *
! * All rights reserved.                                                *
! * This code is part of the HADDOCK software and governed by its       *
! * license. Please see the LICENSE file that should have been included *
! * as part of this package.                                            *
! ***********************************************************************
!
!move molecules far apart

@RUN:protocols/separate.cns(Data=$Data; Toppar=$Toppar)

do (x = refx) (resn ANI or resn DAN or resn XAN)
do (y = refy) (resn ANI or resn DAN or resn XAN)
do (z = refz) (resn ANI or resn DAN or resn XAN)

igroup
  interaction  (not (resn ANI or resn DAN or resn XAN))
               (not (resn ANI or resn DAN or resn XAN)) weight * 1 end
  interaction  (resn ANI or resn DAN or resn XAN)
               (resn ANI or resn DAN or resn XAN) weight * 1 vdw 0.0 elec 0.0 end
end

evaluate ($eintfree = 0.0)
if ($iteration > 0) then
  @RUN:protocols/flex_segment_back.cns
  fix sele=(((attr store5 = 0) or resn ANI or resn DAN or resn XAN) and not name H* and not (resn WAT or resn HOH or resn TIP*)) end
  minimize powell nstep=200 drop=10.0 nprint=25 end
  fix sele=(not all) end
  energy end
  evaluate ($eintfree = $bond + $angl + $impr + $dihe + $vdw + $elec)
end if

display FREE MOLECULES INTERNAL ENERGY = $eintfree

{====>} {* define ASA-based solvation parameters *}
inline @RUN:protocols/def_solv_param.cns

{====>} {* buried surface area *}
evaluate ($esolfree = 0)
evaluate ($nchain1 = 1)
evaluate ($saafree = 0)
while ($nchain1 <= $data.ncomponents) loop nloop1
  coor orient sele=(segid $Toppar.prot_segid_$nchain1 and not ((resn WAT or resn HOH or resn TIP*) or resn DMS or resn ANI or resn DAN or resn XAN)) end
  {====>} {* buried surface area *}
  do (rmsd = 0) (all)
  do (store2 = 0) (all)
  surface mode=access accu=0.075 rh2o=1.4 sele=(segid $Toppar.prot_segid_$nchain1 and not ((resn WAT or resn HOH or resn TIP*) or resn DMS)) end
  show sum (rmsd) (segid $Toppar.prot_segid_$nchain1 and not ((resn WAT or resn HOH or resn TIP*) or resn DMS))
  evaluate ($saafree = $saafree + $result)
  do (store2 = rmsd * store1) (segid $Toppar.prot_segid_$nchain1 and not ((resn WAT or resn HOH or resn TIP*) or resn DMS))
  show sum (store2) (segid $Toppar.prot_segid_$nchain1 and not ((resn WAT or resn HOH or resn TIP*) or resn DMS))
  evaluate ($esolfree = $esolfree + $result)
  evaluate ($nchain1 = $nchain1 + 1)
end loop nloop1

do (x = refx) (resn ANI or resn DAN or resn XAN)
do (y = refy) (resn ANI or resn DAN or resn XAN)
do (z = refz) (resn ANI or resn DAN or resn XAN)
