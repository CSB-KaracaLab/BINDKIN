! waterdock_remove-water.cns
!    MC-based removal of waters in solvated docking
!
! ***********************************************************************
! * Copyright 2003-2015 Alexandre Bonvin, Utrecht University.           *
! * All rights reserved.                                                *
! * This code is part of the HADDOCK software and governed by its       *
! * license. Please see the LICENSE file that should have been included *
! * as part of this package.                                            *
! ***********************************************************************
!
 !store5 contains the waters that are to be "removed" 
 ident (store5) (not all)

 ident (store5) ((resn WAT or resn HOH))
 
 !count number of waters
 show sum(1) ((resn WAT or resn HOH) and name OH2)
 eval ($watercount=$result)

 !determine how many of those to keep
 eval ($randfrac = random(1.0))
 eval ($randfrac = $randfrac * $data.water_randfrac)
 eval ($fractionkeep =$data.water_tokeep + $randfrac)
 eval ($tokeep = $fractionkeep * $watercount)
  
 display info: watercount $watercount
 display info: tokeep $tokeep
 !for each nrig value, different waters are "removed"
 for $atom_id in id ((resn WAT or resn HOH) and name OH2) loop loop2
  eval ($r = random(1.0) * $watercount)
  display info: r-value $r
  if ($r > $tokeep) then
     ident (store5) (store5 or id $atom_id)
  end if
 end loop loop2
      
 ident (store5) (byres store5)

 !"removing" of water: interaction weight 0
 igroup interaction (not all) (not all) end

 igroup
  eval($nchain1 = 0)

  while ($nchain1 < $data.ncomponents) loop nloop1
    eval($nchain1 = $nchain1 + 1)
    eval($nchain2 = $nchain1 )
    while ($nchain2 < $data.ncomponents) loop nloop2
      eval($nchain2 = $nchain2 + 1)
      interaction (segid $Toppar.prot_segid_$nchain1)
                  (segid $Toppar.prot_segid_$nchain2) weight * 1.0 vdw $kinter elec $kinter end
    end loop nloop2
    interaction ((resn WAT or resn HOH or resn TIP*) and not store5) (segid $Toppar.prot_segid_$nchain1) weight * 1.0 end
  end loop nloop1

  interaction ((resn WAT or resn HOH or resn TIP*) and not store5)
	           ((resn WAT or resn HOH or resn TIP*) and not store5) weight * 1.0 end
  interaction (store5) (all) weight * 0.0 end
 end

 if ($data.solvate_method eq "restraints") then
  noe reset end
  !read again the NOE data
  @RUN:protocols/read_noes.cns(Iteration=$Iteration; Data=$Data; count=$count)
 end if
