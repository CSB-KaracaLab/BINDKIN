! print_vean.inp
!    Analyze and print RDC restraints (VEAN) statistics
!
! ***********************************************************************
! * Copyright 2003-2015 Alexandre Bonvin, Utrecht University.           *
! * Originally adapted from Aria 1.2 from Nilges and Linge, EMBL.       *
! * All rights reserved.                                                *
! * This code is part of the HADDOCK software and governed by its       *
! * license. Please see the LICENSE file that should have been included *
! * as part of this package.                                            *
! ***********************************************************************
!

@RUN:protocols/initialize.cns(iteration=$iteration;)

@NEWIT:iteration.cns(iteration=$iteration;)

@RUN:run.cns(
iteration =$iteration;
filenames =$filenames;
data      =$data;
iterations=$iterations;
saprotocol=$saprotocol;
refine    =$refine;
toppar    =$toppar;
analysis  =$analysis;
)

!reads in structure, coordinates and parameter files
@RUN:protocols/read_struc.cns

!set the energy flags:
!@@RUN:protocols/flags_new.cns(Iteration=$Iteration; Data=$Data; )

set display=NEWIT:analysis/vean.disp end

flags exclude * include vean end


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!residual dipolar couplings - vean restraints:
vean nrestraints=10000 end
set echo off message on end

if ($Data.rdc1_choice eq "VANGLE") then
  vean
    class vea1
    force 1.0 1.0
    @@RUN:data/rdcs/rdc1.tbl
  end
end if
if ($data.rdc2_choice eq "VANGLE") then
  vean
    class vea2
    force 1.0 1.0
    @@RUN:data/rdcs/rdc2.tbl
  end
end if
if ($data.rdc3_choice eq "VANGLE") then
  vean
    class vea3
    force 1.0 1.0
    @@RUN:data/rdcs/rdc3.tbl
  end
end if
if ($data.rdc4_choice eq "VANGLE") then
  vean
    class vea4
    force 1.0 1.0
    @@RUN:data/rdcs/rdc4.tbl
  end
end if
if ($data.rdc5_choice eq "VANGLE") then
  vean
    class vea5
    force 1.0 1.0
    @@RUN:data/rdcs/rdc5.tbl
  end
end if
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

evaluate ($sum_rms_rdc1 = 0)
evaluate ($sumsq_rms_rdc1 = 0)
evaluate ($sum_rms_rdc2 = 0)
evaluate ($sumsq_rms_rdc2 = 0)
evaluate ($sum_rms_rdc3 = 0)
evaluate ($sumsq_rms_rdc3 = 0)
evaluate ($sum_rms_rdc4 = 0)
evaluate ($sumsq_rms_rdc4 = 0)
evaluate ($sum_rms_rdc5 = 0)
evaluate ($sumsq_rms_rdc5 = 0)

evaluate ($sum_viol_rdc1 = 0)
evaluate ($sumsq_viol_rdc1 = 0)
evaluate ($sum_viol_rdc2 = 0)
evaluate ($sumsq_viol_rdc2 = 0)
evaluate ($sum_viol_rdc3 = 0)
evaluate ($sumsq_viol_rdc3 = 0)
evaluate ($sum_viol_rdc4 = 0)
evaluate ($sumsq_viol_rdc4 = 0)
evaluate ($sum_viol_rdc5 = 0)
evaluate ($sumsq_viol_rdc5 = 0)

@PREVIT:file.cns(filenames=$filenames)

evaluate ($count = 0)
evaluate ($TotalNstruct = 0)
while ($count lt $Iterations.Structures) loop main
   evaluate ($count=$count+1)
   evaluate ($file = $filenames.bestfile_$count)
   if ($file ne "") then
      evaluate ($TotalNstruct = $TotalNstruct + 1)
   end if
end loop main

if ($Iterations.anastruc > $TotalNstruct) then
  evaluate ($Iterations.anastruc = $ToTalNstruct)
end if

display #rdcset filename RMSvean #viol>5
evaluate ($count = 0)
evaluate ($nstruc1 = 0)
while ($count le $Iterations.anastruc) loop main
   evaluate ($count = $count + 1)
   evaluate ($file = $filenames.bestfile_$count)
   coor init end
   if ($file ne "") then
     coor @@$file
     evaluate ($nstruc1 = $nstruc1 + 1)
     
     evaluate ($violations = 0)
     evaluate ($result = 0)
     if ($Data.rdc1_choice eq "VANGLE") then
       vean print threshold=5.0 class vea1 end
       evaluate ($rms_rdc1 = $result)
       evaluate ($sum_rms_rdc1 = $sum_rms_rdc1 + $rms_rdc1)
       evaluate ($sumsq_rms_rdc1 = $sumsq_rms_rdc1 + $rms_rdc1**2)
       evaluate ($sum_viol_rdc1 = $sum_viol_rdc1 + $violations)
       evaluate ($sumsq_viol_rdc1 = $sumsq_viol_rdc1 + $violations**2)
       display # rdc1: $file $rms_rdc1 $violations
     end if

     evaluate ($violations = 0)
     evaluate ($result = 0)
     if ($Data.rdc2_choice eq "VANGLE") then
       vean print threshold=5.0 class vea2 end
       evaluate ($rms_rdc2 = $result)
       evaluate ($sum_rms_rdc2 = $sum_rms_rdc2 + $rms_rdc2)
       evaluate ($sumsq_rms_rdc2 = $sumsq_rms_rdc2 + $rms_rdc2**2)
       evaluate ($sum_viol_rdc2 = $sum_viol_rdc2 + $violations)
       evaluate ($sumsq_viol_rdc2 = $sumsq_viol_rdc2 + $violations**2)
       display # rdc2: $file $rms_rdc2 $violations
     end if    

     evaluate ($violations = 0)
     evaluate ($result = 0)
     if ($Data.rdc3_choice eq "VANGLE") then
       vean print threshold=5.0 class vea3 end
       evaluate ($rms_rdc3 = $result)
       evaluate ($sum_rms_rdc3 = $sum_rms_rdc3 + $rms_rdc3)
       evaluate ($sumsq_rms_rdc3 = $sumsq_rms_rdc3 + $rms_rdc3**2)
       evaluate ($sum_viol_rdc3 = $sum_viol_rdc3 + $violations)
       evaluate ($sumsq_viol_rdc3 = $sumsq_viol_rdc3 + $violations**2)
       display # rdc3: $file $rms_rdc3 $violations
     end if    

     evaluate ($violations = 0)
     evaluate ($result = 0)
     if ($Data.rdc4_choice eq "VANGLE") then
       vean print threshold=5.0 class vea4 end
       evaluate ($rms_rdc4 = $result)
       evaluate ($sum_rms_rdc4 = $sum_rms_rdc4 + $rms_rdc4)
       evaluate ($sumsq_rms_rdc4 = $sumsq_rms_rdc4 + $rms_rdc4**2)
       evaluate ($sum_viol_rdc4 = $sum_viol_rdc4 + $violations)
       evaluate ($sumsq_viol_rdc4 = $sumsq_viol_rdc4 + $violations**2)
       display # rdc4: $file $rms_rdc4 $violations
     end if    

     evaluate ($violations = 0)
     evaluate ($result = 0)
     if ($Data.rdc5_choice eq "VANGLE") then
       vean print threshold=5.0 class vea5 end
       evaluate ($rms_rdc5 = $result)
       evaluate ($sum_rms_rdc5 = $sum_rms_rdc5 + $rms_rdc5)
       evaluate ($sumsq_rms_rdc5 = $sumsq_rms_rdc5 + $rms_rdc5**2)
       evaluate ($sum_viol_rdc5 = $sum_viol_rdc5 + $violations)
       evaluate ($sumsq_viol_rdc5 = $sumsq_viol_rdc5 + $violations**2)
       display # rdc5: $file $rms_rdc5 $violations
     end if

   end if
end loop main


if ($Data.rdc1_choice eq "VANGLE") then
  evaluate ($mean_rms_rdc1 = $sum_rms_rdc1 / $nstruc1)
  evaluate ($stdev_rms_rdc1 = sqrt(($sumsq_rms_rdc1 - $nstruc1*$mean_rms_rdc1**2)/ $nstruc1))
  evaluate ($mean_viol_rdc1 = $sum_viol_rdc1 / $nstruc1)
  evaluate ($stdev_viol_rdc1 = sqrt(($sumsq_viol_rdc1 - $nstruc1*$mean_viol_rdc1**2)/ $nstruc1))
  display # mean values RDC(VANGLE) class vea1
  display # VANGLE-RMS $mean_rms_rdc1 (+/- $stdev_rms_rdc1 )
  display # VANGLE-VIOLATIONS $mean_viol_rdc1 (+/- $stdev_viol_rdc1 )
end if
if ($Data.rdc2_choice eq "VANGLE") then
  evaluate ($mean_rms_rdc2 = $sum_rms_rdc2 / $nstruc1)
  evaluate ($stdev_rms_rdc2 = sqrt(($sumsq_rms_rdc2 - $nstruc1*$mean_rms_rdc2**2)/ $nstruc1))
  evaluate ($mean_viol_rdc2 = $sum_viol_rdc2 / $nstruc1)
  evaluate ($stdev_viol_rdc2 = sqrt(($sumsq_viol_rdc2 - $nstruc1*$mean_viol_rdc2**2)/ $nstruc1))
  display # mean values RDC(VANGLE) class vea2
  display # VANGLE $mean_rms_rdc2 (+/- $stdev_rms_rdc2 )
  display # VANGLE-VIOLATIONS $mean_viol_rdc2 (+/- $stdev_viol_rdc2 )
end if    
if ($Data.rdc3_choice eq "VANGLE") then
  evaluate ($mean_rms_rdc3 = $sum_rms_rdc3 / $nstruc1)
  evaluate ($stdev_rms_rdc3 = sqrt(($sumsq_rms_rdc3 - $nstruc1*$mean_rms_rdc3**2)/ $nstruc1))
  evaluate ($mean_viol_rdc3 = $sum_viol_rdc3 / $nstruc1)
  evaluate ($stdev_viol_rdc3 = sqrt(($sumsq_viol_rdc3 - $nstruc1*$mean_viol_rdc3**2)/ $nstruc1))
  display # mean values RDC(VANGLE) class vea3
  display # VANGLE $mean_rms_rdc3 (+/- $stdev_rms_rdc3 )
  display # VANGLE-VIOLATIONS $mean_viol_rdc3 (+/- $stdev_viol_rdc3 )
end if    
if ($Data.rdc4_choice eq "VANGLE") then
  evaluate ($mean_rms_rdc4 = $sum_rms_rdc4 / $nstruc1)
  evaluate ($stdev_rms_rdc4 = sqrt(($sumsq_rms_rdc4 - $nstruc1*$mean_rms_rdc4**2)/ $nstruc1))
  evaluate ($mean_viol_rdc4 = $sum_viol_rdc4 / $nstruc1)
  evaluate ($stdev_viol_rdc4 = sqrt(($sumsq_viol_rdc4 - $nstruc1*$mean_viol_rdc4**2)/ $nstruc1))
  display # mean values RDC(VANGLE) class vea4
  display # VANGLE $mean_rms_rdc4 (+/- $stdev_rms_rdc4 )
  display # VANGLE-VIOLATIONS $mean_viol_rdc4 (+/- $stdev_viol_rdc4 )
end if    
if ($Data.rdc5_choice eq "VANGLE") then
  evaluate ($mean_rms_rdc5 = $sum_rms_rdc5 / $nstruc1)
  evaluate ($stdev_rms_rdc5 = sqrt(($sumsq_rms_rdc5 - $nstruc1*$mean_rms_rdc5**2)/ $nstruc1))
  evaluate ($mean_viol_rdc5 = $sum_viol_rdc5 / $nstruc1)
  evaluate ($stdev_viol_rdc5 = sqrt(($sumsq_viol_rdc5 - $nstruc1*$mean_viol_rdc5**2)/ $nstruc1))
  display # mean values RDC(VANGLE) class vea5
  display # VANGLE $mean_rms_rdc5 (+/- $stdev_rms_rdc5 )
  display # VANGLE-VIOLATIONS $mean_viol_rdc5 (+/- $stdev_viol_rdc5 )
end if

stop
