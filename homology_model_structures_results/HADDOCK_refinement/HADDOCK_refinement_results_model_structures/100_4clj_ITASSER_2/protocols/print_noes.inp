! print_noes.inp
!     Analyze and print distance restraints statistics
!
! ***********************************************************************
! * Copyright 2003-2015 Alexandre Bonvin, Utrecht University.           *
! * Originally adapted from Aria 1.2 from Nilges and Linge, EMBL.       *
! * All rights reserved.                                                *
! * This code is part of the HADDOCK software and governed by its       *
! * license. Please see the LICENSE file that should have been included *
! * as part of this package.                                            *
! ***********************************************************************
!

@RUN:protocols/initialize.cns(iteration=$iteration;)

@NEWIT:iteration.cns(iteration=$iteration;)

@RUN:run.cns(
iteration =$iteration;
filenames =$filenames;
data      =$data;
iterations=$iterations;
saprotocol=$saprotocol;
refine    =$refine;
toppar    =$toppar;
analysis  =$analysis;
)

!reads in structure, coordinates and parameter files
@RUN:protocols/read_struc.cns

!set the energy flags:
@@RUN:protocols/flags_new.cns(Iteration=$Iteration; Data=$Data; )

! the following lines are only to avoid error messages
evaluate ($test_rms = 0)

set display=NEWIT:analysis/noe.disp end

flags exclude * include noe end

display #all distance restraints
display #structure rms-noe #viol>0.5A #viol>0.3A #viol>0.1A #Enoe
noe
        reset
        nrestraints = 4000000   ! allocate space for NOEs
        ceiling 100
	
        set echo off message off end 
        class      dist @@NEWIT:unambig.tbl
        class      ambi @@NEWIT:ambig.tbl
        class      hbon @@RUN:data/hbonds/hbonds.tbl
        set echo on message on end

        averaging  * sum
        potential  * soft
        scale      * 1.0                           
        sqconstant * 1.0
        sqexponent * 2
        soexponent * 1
        rswitch    * 1.0
        sqoffset   * 0.0
        asymptote  * 2.0

        msoexponent * 1
        masymptote  * -2.0
        mrswitch    * 1.0

        avexpo hbond 20
end

evaluate ($sum_enoe = 0)
evaluate ($sumsq_enoe = 0)
evaluate ($sum_rms_noe = 0)
evaluate ($sumsq_rms_noe = 0)
evaluate ($sum_trms_noe = 0)
evaluate ($sumsq_trms_noe = 0)
evaluate ($sum_viol_noe1 = 0)
evaluate ($sumsq_viol_noe1 = 0)
evaluate ($sum_viol_noe2 = 0)
evaluate ($sumsq_viol_noe2 = 0)
evaluate ($sum_viol_noe3 = 0)
evaluate ($sumsq_viol_noe3 = 0)
evaluate ($violations = 0)

@PREVIT:file.cns(filenames=$filenames)

evaluate ($count = 0)
evaluate ($TotalNstruct = 0)
while ($count lt $Iterations.Structures) loop main
   evaluate ($count=$count+1)
   evaluate ($file = $filenames.bestfile_$count)
   if ($file ne "") then
      evaluate ($TotalNstruct = $TotalNstruct + 1)
   end if
end loop main

if ($Iterations.anastruc > $TotalNstruct) then
  evaluate ($Iterations.anastruc = $ToTalNstruct)
end if


set message off echo off end
evaluate ($count = 0)
evaluate ($nstruc = 0)
while ($count lt $Iterations.anastruc) loop main
   evaluate ($count = $count + 1)
   evaluate ($file = $filenames.bestfile_$count)
   coor init end
   if ($file ne "") then 
     coor @@$file
     evaluate ($nstruc = $nstruc + 1)

     energy end

     evaluate ($sum_enoe = $sum_enoe + $noe)
     evaluate ($sumsq_enoe = $sumsq_enoe + $noe**2)

     evaluate ($violations = 0)
     evaluate ($result = 0)
     display "=======> " $file
     noe  print thresh=0.025 end
     evaluate ($rms_noe = $result)
     evaluate ($sum_rms_noe = $sum_rms_noe + $rms_noe)
     evaluate ($sumsq_rms_noe = $sumsq_rms_noe + $rms_noe**2)
     evaluate ($sum_trms_noe = $sum_trms_noe + $test_rms)
     evaluate ($sumsq_trms_noe = $sumsq_trms_noe + $test_rms**2)

     evaluate ($violations = 0)
     evaluate ($result = 0)
     noe  print thresh=0.5 end
     evaluate ($sum_viol_noe1 = $sum_viol_noe1 + $violations)
     evaluate ($sumsq_viol_noe1 = $sumsq_viol_noe1 + $violations**2)
     evaluate ($violations1 = $violations)

     set print=NEWIT:analysis/print_dist_all.out end     
     evaluate ($violations = 0)
     evaluate ($result = 0)
     display "=======> " $file
     noe  print thresh=0.3 end

     set print=NEWIT:analysis/print_noe.out end
     evaluate ($sum_viol_noe2 = $sum_viol_noe2 + $violations)
     evaluate ($sumsq_viol_noe2 = $sumsq_viol_noe2 + $violations**2)
     evaluate ($violations2 = $violations)
     evaluate ($violations = 0)
     evaluate ($result = 0)
     display "=======> " $file
     noe  print thresh=0.1 end
     evaluate ($sum_viol_noe3 = $sum_viol_noe3 + $violations)
     evaluate ($sumsq_viol_noe3 = $sumsq_viol_noe3 + $violations**2)
     evaluate ($violations3 = $violations)

     display $file $rms_noe $violations1 $violations2 $violations3 $noe
   end if
end loop main

evaluate ($mean_enoe = $sum_enoe / $nstruc)
evaluate ($stdev_enoe =
          sqrt(($sumsq_enoe - $nstruc*$mean_enoe**2)/ $nstruc))
evaluate ($mean_rms_noe = $sum_rms_noe / $nstruc)
evaluate ($stdev_rms_noe =
          sqrt(($sumsq_rms_noe - $nstruc*$mean_rms_noe**2)/ $nstruc))
evaluate ($mean_viol_noe1 = $sum_viol_noe1 / $nstruc)
evaluate ($stdev_viol_noe1 =
          sqrt(($sumsq_viol_noe1 - $nstruc*$mean_viol_noe1**2)/ $nstruc))
evaluate ($mean_viol_noe2 = $sum_viol_noe2 / $nstruc)
evaluate ($stdev_viol_noe2 =
          sqrt(($sumsq_viol_noe2 - $nstruc*$mean_viol_noe2**2)/ $nstruc))
evaluate ($mean_viol_noe3 = $sum_viol_noe3 / $nstruc)
evaluate ($stdev_viol_noe3 =
          sqrt(($sumsq_viol_noe3 - $nstruc*$mean_viol_noe3**2)/ $nstruc))
display mean values
display Enoe $mean_enoe (+/- $stdev_enoe )
display noe rms $mean_rms_noe (+/- $stdev_rms_noe )
display violations > 0.5A $mean_viol_noe1 (+/- $stdev_viol_noe1 )
display violations > 0.3A $mean_viol_noe2 (+/- $stdev_viol_noe2 )
display violations > 0.1A $mean_viol_noe3 (+/- $stdev_viol_noe3 )

display
display #only unambiguous
display #structure rms-noe #viol>0.5A #viol>0.3A #viol>0.1A #Enoe
noe
        reset
        nrestraints = 4000000                   ! allocate space for NOEs
        ceiling 100
	
        set echo off message off end 
        class      dist @@NEWIT:unambig.tbl
!!!        class      ambi @@NEWIT:ambig.tbl
!!!        class      hbon @@RUN:data/hbonds/hbonds.tbl                
        set echo on message on end

        averaging  * sum
        potential  * soft
        scale      * 1.0                           
        sqconstant * 1.0
        sqexponent * 2
        soexponent * 1
        rswitch    * 1.0
        sqoffset   * 0.0
        asymptote  * 2.0

        msoexponent * 1
        masymptote  * -2.0
        mrswitch    * 1.0

        avexpo hbond 20
end

evaluate ($sum_enoe = 0)
evaluate ($sumsq_enoe = 0)
evaluate ($sum_rms_noe = 0)
evaluate ($sumsq_rms_noe = 0)
evaluate ($sum_trms_noe = 0)
evaluate ($sumsq_trms_noe = 0)
evaluate ($sum_viol_noe1 = 0)
evaluate ($sumsq_viol_noe1 = 0)
evaluate ($sum_viol_noe2 = 0)
evaluate ($sumsq_viol_noe2 = 0)
evaluate ($sum_viol_noe3 = 0)
evaluate ($sumsq_viol_noe3 = 0)
evaluate ($violations = 0)


set message off echo off end
evaluate ($count = 0)
evaluate ($nstruc = 0)
while ($count lt $Iterations.anastruc) loop main
   evaluate ($count = $count + 1)
   evaluate ($file = $filenames.bestfile_$count)
   coor init end
   if ($file ne "") then 
     coor @@$file
     evaluate ($nstruc = $nstruc + 1)

     energy end

     evaluate ($sum_enoe = $sum_enoe + $noe)
     evaluate ($sumsq_enoe = $sumsq_enoe + $noe**2)

     evaluate ($violations = 0)
     evaluate ($result = 0)
     noe  print thresh=0.025 end  
     evaluate ($rms_noe = $result)
     evaluate ($sum_rms_noe = $sum_rms_noe + $rms_noe)
     evaluate ($sumsq_rms_noe = $sumsq_rms_noe + $rms_noe**2)
     evaluate ($sum_trms_noe = $sum_trms_noe + $test_rms)
     evaluate ($sumsq_trms_noe = $sumsq_trms_noe + $test_rms**2)

     evaluate ($violations = 0)
     evaluate ($result = 0)
     noe  print thresh=0.5 end
     evaluate ($sum_viol_noe1 = $sum_viol_noe1 + $violations)
     evaluate ($sumsq_viol_noe1 = $sumsq_viol_noe1 + $violations**2)
     evaluate ($violations1 = $violations)

     set print=NEWIT:analysis/print_noe_unambig.out end     
     evaluate ($violations = 0)
     evaluate ($result = 0)
     noe  print thresh=0.3 end

     set print=NEWIT:analysis/print_noe.out end
     evaluate ($sum_viol_noe2 = $sum_viol_noe2 + $violations)
     evaluate ($sumsq_viol_noe2 = $sumsq_viol_noe2 + $violations**2)
     evaluate ($violations2 = $violations)
     evaluate ($violations = 0)
     evaluate ($result = 0)
     noe  print thresh=0.1 end
     evaluate ($sum_viol_noe3 = $sum_viol_noe3 + $violations)
     evaluate ($sumsq_viol_noe3 = $sumsq_viol_noe3 + $violations**2)
     evaluate ($violations3 = $violations)

     display $file $rms_noe $violations1 $violations2 $violations3 $noe
   end if
end loop main

evaluate ($mean_enoe = $sum_enoe / $nstruc)
evaluate ($stdev_enoe =
          sqrt(($sumsq_enoe - $nstruc*$mean_enoe**2)/ $nstruc))
evaluate ($mean_rms_noe = $sum_rms_noe / $nstruc)
evaluate ($stdev_rms_noe =
          sqrt(($sumsq_rms_noe - $nstruc*$mean_rms_noe**2)/ $nstruc))
evaluate ($mean_viol_noe1 = $sum_viol_noe1 / $nstruc)
evaluate ($stdev_viol_noe1 =
          sqrt(($sumsq_viol_noe1 - $nstruc*$mean_viol_noe1**2)/ $nstruc))
evaluate ($mean_viol_noe2 = $sum_viol_noe2 / $nstruc)
evaluate ($stdev_viol_noe2 =
          sqrt(($sumsq_viol_noe2 - $nstruc*$mean_viol_noe2**2)/ $nstruc))
evaluate ($mean_viol_noe3 = $sum_viol_noe3 / $nstruc)
evaluate ($stdev_viol_noe3 =
          sqrt(($sumsq_viol_noe3 - $nstruc*$mean_viol_noe3**2)/ $nstruc))
display mean values
display Enoe $mean_enoe (+/- $stdev_enoe )
display noe rms $mean_rms_noe (+/- $stdev_rms_noe )
display violations > 0.5A $mean_viol_noe1 (+/- $stdev_viol_noe1 )
display violations > 0.3A $mean_viol_noe2 (+/- $stdev_viol_noe2 )
display violations > 0.1A $mean_viol_noe3 (+/- $stdev_viol_noe3 )



display
display #only ambiguous
display #structure rms-noe #viol>0.5A #viol>0.3A #viol>0.1A #Enoe
noe
        reset
        nrestraints = 4000000                ! allocate space for NOEs
        ceiling 100
	
        set echo off message off end 
!!!        class      dist @@NEWIT:unambig.tbl
        class      ambi @@NEWIT:ambig.tbl
!!!        class      hbon @@RUN:data/hbonds/hbonds.tbl               
        set echo on message on end

        averaging  * sum
        potential  * soft
        scale      * 1.0                           
        sqconstant * 1.0
        sqexponent * 2
        soexponent * 1
        rswitch    * 1.0
        sqoffset   * 0.0
        asymptote  * 2.0

        msoexponent * 1
        masymptote  * -2.0
        mrswitch    * 1.0

        avexpo hbond 20
end

evaluate ($sum_enoe = 0)
evaluate ($sumsq_enoe = 0)
evaluate ($sum_rms_noe = 0)
evaluate ($sumsq_rms_noe = 0)
evaluate ($sum_trms_noe = 0)
evaluate ($sumsq_trms_noe = 0)
evaluate ($sum_viol_noe1 = 0)
evaluate ($sumsq_viol_noe1 = 0)
evaluate ($sum_viol_noe2 = 0)
evaluate ($sumsq_viol_noe2 = 0)
evaluate ($sum_viol_noe3 = 0)
evaluate ($sumsq_viol_noe3 = 0)
evaluate ($violations = 0)


!set message off echo off end
evaluate ($count = 0)
evaluate ($nstruc = 0)
while ($count lt $Iterations.anastruc) loop main
   evaluate ($count = $count + 1)
   evaluate ($file = $filenames.bestfile_$count)
   coor init end
   if ($file ne "") then 
     coor @@$file
     evaluate ($nstruc = $nstruc + 1)

     energy end

     evaluate ($sum_enoe = $sum_enoe + $noe)
     evaluate ($sumsq_enoe = $sumsq_enoe + $noe**2)

     evaluate ($violations = 0)
     evaluate ($result = 0)
     noe  print thresh=0.025 end  
     evaluate ($rms_noe = $result)
     evaluate ($sum_rms_noe = $sum_rms_noe + $rms_noe)
     evaluate ($sumsq_rms_noe = $sumsq_rms_noe + $rms_noe**2)
     evaluate ($sum_trms_noe = $sum_trms_noe + $test_rms)
     evaluate ($sumsq_trms_noe = $sumsq_trms_noe + $test_rms**2)

     evaluate ($violations = 0)
     evaluate ($result = 0)
     noe  print thresh=0.5 end
     evaluate ($sum_viol_noe1 = $sum_viol_noe1 + $violations)
     evaluate ($sumsq_viol_noe1 = $sumsq_viol_noe1 + $violations**2)
     evaluate ($violations1 = $violations)

     set print=NEWIT:analysis/print_noe_ambig.out end     
     evaluate ($violations = 0)
     evaluate ($result = 0)
     noe  print thresh=0.3 end

     set print=NEWIT:analysis/print_noe.out end
     evaluate ($sum_viol_noe2 = $sum_viol_noe2 + $violations)
     evaluate ($sumsq_viol_noe2 = $sumsq_viol_noe2 + $violations**2)
     evaluate ($violations2 = $violations)
     evaluate ($violations = 0)
     evaluate ($result = 0)
     noe  print thresh=0.1 end
     evaluate ($sum_viol_noe3 = $sum_viol_noe3 + $violations)
     evaluate ($sumsq_viol_noe3 = $sumsq_viol_noe3 + $violations**2)
     evaluate ($violations3 = $violations)

     display $file $rms_noe $violations1 $violations2 $violations3 $noe
   end if
end loop main

evaluate ($mean_enoe = $sum_enoe / $nstruc)
evaluate ($stdev_enoe =
          sqrt(($sumsq_enoe - $nstruc*$mean_enoe**2)/ $nstruc))
evaluate ($mean_rms_noe = $sum_rms_noe / $nstruc)
evaluate ($stdev_rms_noe =
          sqrt(($sumsq_rms_noe - $nstruc*$mean_rms_noe**2)/ $nstruc))
evaluate ($mean_viol_noe1 = $sum_viol_noe1 / $nstruc)
evaluate ($stdev_viol_noe1 =
          sqrt(($sumsq_viol_noe1 - $nstruc*$mean_viol_noe1**2)/ $nstruc))
evaluate ($mean_viol_noe2 = $sum_viol_noe2 / $nstruc)
evaluate ($stdev_viol_noe2 =
          sqrt(($sumsq_viol_noe2 - $nstruc*$mean_viol_noe2**2)/ $nstruc))
evaluate ($mean_viol_noe3 = $sum_viol_noe3 / $nstruc)
evaluate ($stdev_viol_noe3 =
          sqrt(($sumsq_viol_noe3 - $nstruc*$mean_viol_noe3**2)/ $nstruc))
display mean values
display Enoe $mean_enoe (+/- $stdev_enoe )
display noe rms $mean_rms_noe (+/- $stdev_rms_noe )
display violations > 0.5A $mean_viol_noe1 (+/- $stdev_viol_noe1 )
display violations > 0.3A $mean_viol_noe2 (+/- $stdev_viol_noe2 )
display violations > 0.1A $mean_viol_noe3 (+/- $stdev_viol_noe3 )




display
display #all noe distance restraints
display #structure rms-noe #viol>0.5A #viol>0.3A #viol>0.1A #Enoe
noe
        reset
        nrestraints = 4000000              ! allocate space for NOEs
        ceiling 100
	
        set echo off message off end 
        class      dist @@NEWIT:unambig.tbl
        class      ambi @@NEWIT:ambig.tbl
!!!        class      hbon @@RUN:data/hbonds/hbonds.tbl
        set echo on message on end

        averaging  * sum
        potential  * soft
        scale      * 1.0                           
        sqconstant * 1.0
        sqexponent * 2
        soexponent * 1
        rswitch    * 1.0
        sqoffset   * 0.0
        asymptote  * 2.0

        msoexponent * 1
        masymptote  * -2.0
        mrswitch    * 1.0

        avexpo hbond 20
end

evaluate ($sum_enoe = 0)
evaluate ($sumsq_enoe = 0)
evaluate ($sum_rms_noe = 0)
evaluate ($sumsq_rms_noe = 0)
evaluate ($sum_trms_noe = 0)
evaluate ($sumsq_trms_noe = 0)
evaluate ($sum_viol_noe1 = 0)
evaluate ($sumsq_viol_noe1 = 0)
evaluate ($sum_viol_noe2 = 0)
evaluate ($sumsq_viol_noe2 = 0)
evaluate ($sum_viol_noe3 = 0)
evaluate ($sumsq_viol_noe3 = 0)
evaluate ($violations = 0)


!set message off echo off end
evaluate ($count = 0)
evaluate ($nstruc = 0)
while ($count lt $Iterations.anastruc) loop main
   evaluate ($count = $count + 1)
   evaluate ($file = $filenames.bestfile_$count)
   coor init end
   if ($file ne "") then 
     coor @@$file
     evaluate ($nstruc = $nstruc + 1)

     energy end

     evaluate ($sum_enoe = $sum_enoe + $noe)
     evaluate ($sumsq_enoe = $sumsq_enoe + $noe**2)

     evaluate ($violations = 0)
     evaluate ($result = 0)
     noe  print thresh=0.025 end  
     evaluate ($rms_noe = $result)
     evaluate ($sum_rms_noe = $sum_rms_noe + $rms_noe)
     evaluate ($sumsq_rms_noe = $sumsq_rms_noe + $rms_noe**2)
     evaluate ($sum_trms_noe = $sum_trms_noe + $test_rms)
     evaluate ($sumsq_trms_noe = $sumsq_trms_noe + $test_rms**2)

     evaluate ($violations = 0)
     evaluate ($result = 0)
     noe  print thresh=0.5 end
     evaluate ($sum_viol_noe1 = $sum_viol_noe1 + $violations)
     evaluate ($sumsq_viol_noe1 = $sumsq_viol_noe1 + $violations**2)
     evaluate ($violations1 = $violations)

     set print=NEWIT:analysis/print_dist_noes.out end     
     evaluate ($violations = 0)
     evaluate ($result = 0)
     noe  print thresh=0.3 end

     set print=NEWIT:analysis/print_noe_all.out end
     evaluate ($sum_viol_noe2 = $sum_viol_noe2 + $violations)
     evaluate ($sumsq_viol_noe2 = $sumsq_viol_noe2 + $violations**2)
     evaluate ($violations2 = $violations)
     evaluate ($violations = 0)
     evaluate ($result = 0)
     noe  print thresh=0.1 end
     evaluate ($sum_viol_noe3 = $sum_viol_noe3 + $violations)
     evaluate ($sumsq_viol_noe3 = $sumsq_viol_noe3 + $violations**2)
     evaluate ($violations3 = $violations)

     display $file $rms_noe $violations1 $violations2 $violations3 $noe
   end if
end loop main

evaluate ($mean_enoe = $sum_enoe / $nstruc)
evaluate ($stdev_enoe =
          sqrt(($sumsq_enoe - $nstruc*$mean_enoe**2)/ $nstruc))
evaluate ($mean_rms_noe = $sum_rms_noe / $nstruc)
evaluate ($stdev_rms_noe =
          sqrt(($sumsq_rms_noe - $nstruc*$mean_rms_noe**2)/ $nstruc))
evaluate ($mean_viol_noe1 = $sum_viol_noe1 / $nstruc)
evaluate ($stdev_viol_noe1 =
          sqrt(($sumsq_viol_noe1 - $nstruc*$mean_viol_noe1**2)/ $nstruc))
evaluate ($mean_viol_noe2 = $sum_viol_noe2 / $nstruc)
evaluate ($stdev_viol_noe2 =
          sqrt(($sumsq_viol_noe2 - $nstruc*$mean_viol_noe2**2)/ $nstruc))
evaluate ($mean_viol_noe3 = $sum_viol_noe3 / $nstruc)
evaluate ($stdev_viol_noe3 =
          sqrt(($sumsq_viol_noe3 - $nstruc*$mean_viol_noe3**2)/ $nstruc))
display mean values
display Enoe $mean_enoe (+/- $stdev_enoe )
display noe rms $mean_rms_noe (+/- $stdev_rms_noe )
display violations > 0.5A $mean_viol_noe1 (+/- $stdev_viol_noe1 )
display violations > 0.3A $mean_viol_noe2 (+/- $stdev_viol_noe2 )
display violations > 0.1A $mean_viol_noe3 (+/- $stdev_viol_noe3 )



display
display #only hydrogen bond
display #structure rms-noe #viol>0.5A #viol>0.3A #viol>0.1A #Enoe
noe
        reset
        nrestraints = 4000000                ! allocate space for NOEs
        ceiling 100
	
        set echo off message off end 
!!!        class      dist @@NEWIT:unambig.tbl
!!!        class      ambi @@NEWIT:ambig.tbl
        class      hbon @@RUN:data/hbonds/hbonds.tbl             
        set echo on message on end

        averaging  * sum
        potential  * soft
        scale      * 1.0                           
        sqconstant * 1.0
        sqexponent * 2
        soexponent * 1
        rswitch    * 1.0
        sqoffset   * 0.0
        asymptote  * 2.0

        msoexponent * 1
        masymptote  * -2.0
        mrswitch    * 1.0

        avexpo hbond 20
end

evaluate ($sum_enoe = 0)
evaluate ($sumsq_enoe = 0)
evaluate ($sum_rms_noe = 0)
evaluate ($sumsq_rms_noe = 0)
evaluate ($sum_trms_noe = 0)
evaluate ($sumsq_trms_noe = 0)
evaluate ($sum_viol_noe1 = 0)
evaluate ($sumsq_viol_noe1 = 0)
evaluate ($sum_viol_noe2 = 0)
evaluate ($sumsq_viol_noe2 = 0)
evaluate ($sum_viol_noe3 = 0)
evaluate ($sumsq_viol_noe3 = 0)
evaluate ($violations = 0)

!set message off echo off end
evaluate ($count = 0)
evaluate ($nstruc = 0)
while ($count lt $Iterations.anastruc) loop main
   evaluate ($count = $count + 1)
   evaluate ($file = $filenames.bestfile_$count)
   coor init end
   if ($file ne "") then 
     coor @@$file
     evaluate ($nstruc = $nstruc + 1)

     energy end

     evaluate ($sum_enoe = $sum_enoe + $noe)
     evaluate ($sumsq_enoe = $sumsq_enoe + $noe**2)

     evaluate ($violations = 0)
     evaluate ($result = 0)
     noe  print thresh=0.025 end  
     evaluate ($rms_noe = $result)
     evaluate ($sum_rms_noe = $sum_rms_noe + $rms_noe)
     evaluate ($sumsq_rms_noe = $sumsq_rms_noe + $rms_noe**2)
     evaluate ($sum_trms_noe = $sum_trms_noe + $test_rms)
     evaluate ($sumsq_trms_noe = $sumsq_trms_noe + $test_rms**2)

     evaluate ($violations = 0)
     evaluate ($result = 0)
     noe  print thresh=0.5 end
     evaluate ($sum_viol_noe1 = $sum_viol_noe1 + $violations)
     evaluate ($sumsq_viol_noe1 = $sumsq_viol_noe1 + $violations**2)
     evaluate ($violations1 = $violations)

     set print=NEWIT:analysis/print_dist_hbonds.out end     
     evaluate ($violations = 0)
     evaluate ($result = 0)
     noe  print thresh=0.3 end

     set print=NEWIT:analysis/print_noe.out end
     evaluate ($sum_viol_noe2 = $sum_viol_noe2 + $violations)
     evaluate ($sumsq_viol_noe2 = $sumsq_viol_noe2 + $violations**2)
     evaluate ($violations2 = $violations)
     evaluate ($violations = 0)
     evaluate ($result = 0)
     noe  print thresh=0.1 end
     evaluate ($sum_viol_noe3 = $sum_viol_noe3 + $violations)
     evaluate ($sumsq_viol_noe3 = $sumsq_viol_noe3 + $violations**2)
     evaluate ($violations3 = $violations)

     display $file $rms_noe $violations1 $violations2 $violations3 $noe
   end if
end loop main

evaluate ($mean_enoe = $sum_enoe / $nstruc)
evaluate ($stdev_enoe =
          sqrt(($sumsq_enoe - $nstruc*$mean_enoe**2)/ $nstruc))
evaluate ($mean_rms_noe = $sum_rms_noe / $nstruc)
evaluate ($stdev_rms_noe =
          sqrt(($sumsq_rms_noe - $nstruc*$mean_rms_noe**2)/ $nstruc))
evaluate ($mean_viol_noe1 = $sum_viol_noe1 / $nstruc)
evaluate ($stdev_viol_noe1 =
          sqrt(($sumsq_viol_noe1 - $nstruc*$mean_viol_noe1**2)/ $nstruc))
evaluate ($mean_viol_noe2 = $sum_viol_noe2 / $nstruc)
evaluate ($stdev_viol_noe2 =
          sqrt(($sumsq_viol_noe2 - $nstruc*$mean_viol_noe2**2)/ $nstruc))
evaluate ($mean_viol_noe3 = $sum_viol_noe3 / $nstruc)
evaluate ($stdev_viol_noe3 =
          sqrt(($sumsq_viol_noe3 - $nstruc*$mean_viol_noe3**2)/ $nstruc))
display mean values
display Enoe $mean_enoe (+/- $stdev_enoe )
display noe rms $mean_rms_noe (+/- $stdev_rms_noe )
display violations > 0.5A $mean_viol_noe1 (+/- $stdev_viol_noe1 )
display violations > 0.3A $mean_viol_noe2 (+/- $stdev_viol_noe2 )
display violations > 0.1A $mean_viol_noe3 (+/- $stdev_viol_noe3 )

evaluate ($outdis  = "NEWIT:analysis/NOE_DONE")
set display=$outdis end
display DONE

stop

